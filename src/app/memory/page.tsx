"use client";

import { createInitialGameState, GameState } from "@/app/memory/lib/game-logic";
import GameBoard from "@/app/memory/ui/game-board";
import GameOverModal from "@/app/memory/ui/game-over-modal";
import ScorePanel from "@/app/memory/ui/score-panel";

import { useEffect, useState } from "react";
import { DifficultyTabs } from "./ui/difficulty-tabs";
import { Title } from "./ui/title";

export default function MemoryGameHomePage() {
  const [gameState, setGameState] = useState<GameState>(() =>
    createInitialGameState(4, 4)
  );
  const [gridCols, setGridCols] = useState(4);
  const [gridRows, setGridRows] = useState(4);
  const [showGameOverModal, setShowGameOverModal] = useState(false);
  const [gameStarted, setGameStarted] = useState(false);

  // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∏–≥—Ä—ã
  useEffect(() => {
    if (gameState.isGameOver && !showGameOverModal && gameStarted) {
      // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø–æ–∫–∞–∑–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –∞–Ω–∏–º–∞—Ü–∏–∏
      setTimeout(() => {
        setShowGameOverModal(true);
      }, 1000);
    }
  }, [gameState.isGameOver, showGameOverModal, gameStarted]);

  /**
   * –ù–∞—á–∏–Ω–∞–µ—Ç –Ω–æ–≤—É—é –∏–≥—Ä—É
   */
  const handleNewGame = (newGridCols: number, newGridRows: number) => {
    setGridCols(newGridCols);
    setGridRows(newGridRows);
    setGameState(createInitialGameState(newGridCols, newGridRows));
    setShowGameOverModal(false);
    setGameStarted(true);
  };

  /**
   * –û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
   */
  const handleGameStateChange = (newState: GameState) => {
    setGameState(newState);
  };

  /**
   * –ó–∞–∫—Ä—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≥—Ä—ã
   */
  const handleCloseGameOverModal = () => {
    setShowGameOverModal(false);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900 py-8 px-4">
      <div className="container mx-auto max-w-7xl">
        <Title />

        {!gameStarted && (
          <DifficultyTabs onDifficultySelected={handleNewGame} />
        )}

        {/* –ò–≥—Ä–æ–≤–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å */}
        {gameStarted && (
          <div className="grid grid-cols-1 lg:grid-cols-4 gap-8">
            {/* –ü–∞–Ω–µ–ª—å —Å—á–µ—Ç–∞ (—Å–ª–µ–≤–∞ –Ω–∞ –¥–µ—Å–∫—Ç–æ–ø–µ, —Å–≤–µ—Ä—Ö—É –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö) */}
            <div className="lg:col-span-1 order-2 lg:order-1">
              <ScorePanel
                score={gameState.score}
                moves={gameState.moves}
                onNewGame={() => handleNewGame(gridCols, gridRows)}
                isGameActive={gameStarted && !gameState.isGameOver}
              />

              {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
              <div className="mt-6 p-4 bg-white dark:bg-gray-800 rounded-lg shadow-lg">
                <h3 className="font-semibold mb-3 text-gray-800 dark:text-white">
                  üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
                </h3>
                <div className="space-y-2 text-sm">
                  <div className="flex justify-between">
                    <span className="text-gray-600 dark:text-gray-400">
                      –†–∞–∑–º–µ—Ä –ø–æ–ª—è:
                    </span>
                    <span className="font-medium">
                      {gridCols}√ó{gridRows}
                    </span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-gray-600 dark:text-gray-400">
                      –í—Å–µ–≥–æ –ø–∞—Ä:
                    </span>
                    <span className="font-medium">
                      {gameState.cards.length / 2}
                    </span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-gray-600 dark:text-gray-400">
                      –ù–∞–π–¥–µ–Ω–æ:
                    </span>
                    <span className="font-medium text-green-600">
                      {gameState.cards.filter((card) => card.isMatched).length /
                        2}
                    </span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-gray-600 dark:text-gray-400">
                      –û—Å—Ç–∞–ª–æ—Å—å:
                    </span>
                    <span className="font-medium text-blue-600">
                      {(gameState.cards.length -
                        gameState.cards.filter((card) => card.isMatched)
                          .length) /
                        2}
                    </span>
                  </div>
                </div>
              </div>
            </div>

            {/* –ò–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ (—Å–ø—Ä–∞–≤–∞ –Ω–∞ –¥–µ—Å–∫—Ç–æ–ø–µ, —Å–≤–µ—Ä—Ö—É –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö) */}
            <div className="lg:col-span-3 order-1 lg:order-2">
              <GameBoard
                gameState={gameState}
                onGameStateChange={handleGameStateChange}
                gridCols={gridCols}
                gridRows={gridRows}
              />
            </div>
          </div>
        )}

        {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≥—Ä—ã */}
        <GameOverModal
          isOpen={showGameOverModal}
          score={gameState.score}
          moves={gameState.moves}
          onNewGame={() => handleNewGame(gridCols, gridRows)}
          onClose={handleCloseGameOverModal}
        />

        {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ */}
        {!gameStarted && (
          <div className="mt-12 max-w-4xl mx-auto">
            <div className="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-8">
              <h2 className="text-2xl font-bold text-center mb-6 text-gray-800 dark:text-white">
                üéÆ –ö–∞–∫ –∏–≥—Ä–∞—Ç—å
              </h2>
              <div className="grid md:grid-cols-2 gap-6">
                <div className="space-y-4">
                  <div className="flex items-start space-x-3">
                    <div className="bg-blue-100 dark:bg-blue-900 rounded-full p-2 text-blue-600 dark:text-blue-300 font-bold text-sm w-8 h-8 flex items-center justify-center flex-shrink-0">
                      1
                    </div>
                    <div>
                      <h3 className="font-semibold text-gray-800 dark:text-white">
                        –ü–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–π—Ç–µ –∫–∞—Ä—Ç—ã
                      </h3>
                      <p className="text-gray-600 dark:text-gray-400 text-sm">
                        –ö–ª–∏–∫–∞–π—Ç–µ –ø–æ –∫–∞—Ä—Ç–∞–º, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –∏—Ö –∑–Ω–∞—á–µ–Ω–∏–µ. –ó–∞ –æ–¥–∏–Ω
                        —Ö–æ–¥ –º–æ–∂–Ω–æ –æ—Ç–∫—Ä—ã—Ç—å —Ç–æ–ª—å–∫–æ –¥–≤–µ –∫–∞—Ä—Ç—ã.
                      </p>
                    </div>
                  </div>
                  <div className="flex items-start space-x-3">
                    <div className="bg-green-100 dark:bg-green-900 rounded-full p-2 text-green-600 dark:text-green-300 font-bold text-sm w-8 h-8 flex items-center justify-center flex-shrink-0">
                      2
                    </div>
                    <div>
                      <h3 className="font-semibold text-gray-800 dark:text-white">
                        –ù–∞—Ö–æ–¥–∏—Ç–µ –ø–∞—Ä—ã
                      </h3>
                      <p className="text-gray-600 dark:text-gray-400 text-sm">
                        –ï—Å–ª–∏ –¥–≤–µ –∫–∞—Ä—Ç—ã —Å–æ–≤–ø–∞–¥–∞—é—Ç, –æ–Ω–∏ –æ—Å—Ç–∞—é—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç—ã–º–∏ –∏
                        –∏—Å—á–µ–∑–∞—é—Ç —Å –ø–æ–ª—è.
                      </p>
                    </div>
                  </div>
                </div>
                <div className="space-y-4">
                  <div className="flex items-start space-x-3">
                    <div className="bg-yellow-100 dark:bg-yellow-900 rounded-full p-2 text-yellow-600 dark:text-yellow-300 font-bold text-sm w-8 h-8 flex items-center justify-center flex-shrink-0">
                      3
                    </div>
                    <div>
                      <h3 className="font-semibold text-gray-800 dark:text-white">
                        –ù–∞–±–∏—Ä–∞–π—Ç–µ –æ—á–∫–∏
                      </h3>
                      <p className="text-gray-600 dark:text-gray-400 text-sm">
                        –ó–∞ –∫–∞–∂–¥—É—é –Ω–∞–π–¥–µ–Ω–Ω—É—é –ø–∞—Ä—É –ø–æ–ª—É—á–∞–π—Ç–µ –æ—á–∫–∏. –ß–µ–º –º–µ–Ω—å—à–µ
                        —Ö–æ–¥–æ–≤, —Ç–µ–º –±–æ–ª—å—à–µ –æ—á–∫–æ–≤!
                      </p>
                    </div>
                  </div>
                  <div className="flex items-start space-x-3">
                    <div className="bg-purple-100 dark:bg-purple-900 rounded-full p-2 text-purple-600 dark:text-purple-300 font-bold text-sm w-8 h-8 flex items-center justify-center flex-shrink-0">
                      4
                    </div>
                    <div>
                      <h3 className="font-semibold text-gray-800 dark:text-white">
                        –ó–∞–≤–µ—Ä—à–∏—Ç–µ –∏–≥—Ä—É
                      </h3>
                      <p className="text-gray-600 dark:text-gray-400 text-sm">
                        –ù–∞–π–¥–∏—Ç–µ –≤—Å–µ –ø–∞—Ä—ã, —á—Ç–æ–±—ã –≤—ã–∏–≥—Ä–∞—Ç—å –∏ —É–≤–∏–¥–µ—Ç—å —Å–≤–æ–π –∏—Ç–æ–≥–æ–≤—ã–π
                        —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
                      </p>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  );
}
